@model NorthWindTraders.Models.Customer

@{
    ViewData["Title"] = "Customer Details";
}

<h1>Customer Details</h1>

<div>
    <h4>@Model.CompanyName</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.ContactName)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.ContactName)</dd>
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.ContactTitle)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.ContactTitle)</dd>
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Address)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Address)</dd>
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.City)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.City)</dd>
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Region)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Region)</dd>
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.PostalCode)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.PostalCode)</dd>
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Country)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Country)</dd>
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Phone)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Phone)</dd>
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Fax)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Fax)</dd>
    </dl>
</div>

<div class="container mt-4">
    <h3 class="text-center mb-4">Key Statistics</h3>
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="row g-4">
                <div class="col-md-6">
                    <div class="card bg-primary text-white h-100">
                        <div class="card-body text-center">
                            <h5 class="card-title">Total Orders</h5>
                            <p class="card-text display-4">@(ViewBag.TotalOrders ?? 0)</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card bg-success text-white h-100">
                        <div class="card-body text-center">
                            <h5 class="card-title">Total Revenue</h5>
                            <p class="card-text display-4">@((ViewBag.TotalRevenue ?? 0m).ToString("C"))</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card bg-info text-white h-100">
                        <div class="card-body text-center">
                            <h5 class="card-title">Average Order Value</h5>
                            <p class="card-text display-4">@((ViewBag.TotalOrders > 0 ? ViewBag.TotalRevenue / ViewBag.TotalOrders : 0m).ToString("C"))</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card bg-warning text-white h-100">
                        <div class="card-body text-center">
                            <h5 class="card-title">Customer Since</h5>
                            <p class="card-text display-4">@(ViewBag.FirstOrderDate?.ToString("MMM yyyy") ?? "N/A")</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="mt-4">
    <h3>Order History</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Order ID</th>
                <th>Order Date</th>
                <th>Required Date</th>
                <th>Shipped Date</th>
                <th>Total Amount</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Orders != null)
            {
                @foreach (var order in Model.Orders.OrderByDescending(o => o.OrderDate))
                {
                    var orderTotal = order.OrderDetails?.Sum(od => od.UnitPrice * Convert.ToDecimal(od.Quantity) * (1m - Convert.ToDecimal(od.Discount))) ?? 0m;
                    var status = order.ShippedDate.HasValue ? "Shipped" : 
                                order.OrderDate.HasValue ? "Processing" : "Pending";
                    var statusClass = status == "Shipped" ? "success" : 
                                    status == "Processing" ? "warning" : "secondary";

                    <tr>
                        <td>
                            <a asp-controller="Orders" asp-action="Details" asp-route-id="@order.OrderID" class="text-decoration-none">
                                @order.OrderID
                            </a>
                        </td>
                        <td>@(order.OrderDate?.ToString("MMM dd, yyyy") ?? "N/A")</td>
                        <td>@(order.RequiredDate?.ToString("MMM dd, yyyy") ?? "N/A")</td>
                        <td>@(order.ShippedDate?.ToString("MMM dd, yyyy") ?? "N/A")</td>
                        <td>@orderTotal.ToString("C")</td>
                        <td><span class="badge bg-@statusClass">@status</span></td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<div>
    <a asp-action="Edit" asp-route-id="@Model.CustomerID" class="btn btn-warning">Edit</a>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div> 